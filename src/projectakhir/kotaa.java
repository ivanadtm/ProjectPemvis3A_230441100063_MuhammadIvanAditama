/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projectakhir;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import projectakhir.login.Session;
/**
 *
 * @author Ivan Aditama
 */
public class kotaa extends javax.swing.JFrame {

    Connection conn;
    
    /**
     * Creates new form kotaa
     */
    public kotaa() {
        initComponents();
        conn = koneksi.getConnection();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        roundedPanel2 = new costume.RoundedPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        roundedPanel1 = new costume.RoundedPanel();
        jPanel2 = new javax.swing.JPanel();
        makanan = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        roundedPanel2.setForeground(new java.awt.Color(255, 255, 255));
        roundedPanel2.setRoundBottomLeft(30);
        roundedPanel2.setRoundBottomRight(30);
        roundedPanel2.setRoundTopLeft(30);
        roundedPanel2.setRoundTopRight(30);
        roundedPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("LIST KOTA JAWA TIMUR");
        roundedPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 0, -1, -1));

        jLabel2.setText("Pilih kota yang ingin anda kunjungi");
        roundedPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, -1, -1));

        jPanel1.add(roundedPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 450, 50));

        roundedPanel1.setForeground(new java.awt.Color(255, 255, 255));
        roundedPanel1.setRoundBottomLeft(30);
        roundedPanel1.setRoundBottomRight(30);
        roundedPanel1.setRoundTopLeft(30);
        roundedPanel1.setRoundTopRight(30);
        roundedPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.GridLayout(2, 3, 20, 20));

        makanan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        makanan.setText("SURABAYA");
        makanan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makananActionPerformed(evt);
            }
        });
        jPanel2.add(makanan);

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setText("BLITAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setText("KEDIRI");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);

        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setText("MOJOKERTO");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);

        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton5.setText("BATU");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5);

        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton6.setText("MADIUN");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6);

        roundedPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 430, 130));

        jPanel1.add(roundedPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 450, 170));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void makananActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makananActionPerformed
        // TODO add your handling code here:
         surabaya sby = new surabaya();
        try {
    // ID makanan untuk masing-masing panel (statis)
    int[] ids = {1,2,3,4,5};

    // Ambil data untuk setiap ID
    for (int i = 0; i < ids.length; i++) {
        int id = ids[i];

        // Query SQL untuk ID tertentu
        String sql = "SELECT nama_makanan, gambar FROM makanan WHERE id_makanan = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, id); // Set ID makanan
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            // Ambil nama makanan dan gambar
            String nama = rs.getString("nama_makanan");
            byte[] gambarBytes = rs.getBytes("gambar");

            // Masukkan ke panel sesuai indeks
            switch (i) {
                case 0:
                    sby.txtJudul1.setText(nama); // Set judul untuk Panel 1
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar1.setIcon(imageIcon);
                    }else {
                        sby.gambar1.setText("Gambar tidak tersedia.");
                    }
                    break;

                case 1:
                    sby.txtJudul2.setText(nama); // Set judul untuk Panel 2
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar2.setIcon(imageIcon);
                    }else {
                        sby.gambar2.setText("Gambar tidak tersedia.");
                    }
                    break;

                case 2:
                    sby.txtJudul3.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar3.setIcon(imageIcon);
                    }else {
                        sby.gambar3.setText("Gambar tidak tersedia.");
                    }
                    break;
                    
                case 3:
                    sby.txtJudul4.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar4.setIcon(imageIcon);
                    }else {
                        sby.gambar4.setText("Gambar tidak tersedia.");
                    }
                    break;
                    
                case 4:
                    sby.txtJudul5.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar5.setIcon(imageIcon);
                    }else {
                        sby.gambar5.setText("Gambar tidak tersedia.");
                    }
                    break;

                default:
                    break;
            }
        } else {
            // Jika data tidak ditemukan, tambahkan pesan error ke panel
            switch (i) {
                case 0:
                    sby.txtJudul1.setText("Data tidak ditemukan.");
                    sby.gambar1.setText("Tidak ada gambar.");
                    sby.gambar1.setIcon(null);
                    break;
                case 1:
                    sby.txtJudul2.setText("Data tidak ditemukan.");
                    sby.gambar2.setText("Tidak ada gambar.");
                    sby.gambar2.setIcon(null);
                    break;
                case 2:
                    sby.txtJudul3.setText("Data tidak ditemukan.");
                    sby.gambar3.setText("Tidak ada gambar.");
                    sby.gambar3.setIcon(null);
                case 3:
                    sby.txtJudul4.setText("Data tidak ditemukan.");
                    sby.gambar4.setText("Tidak ada gambar.");
                    sby.gambar4.setIcon(null);
                case 4:
                    sby.txtJudul5.setText("Data tidak ditemukan.");
                    sby.gambar5.setText("Tidak ada gambar.");
                    sby.gambar5.setIcon(null);
                    break;
                default:
                    break;
            }
        }

        rs.close();
        ps.close();
    }

    
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
        
        try{
             // Query SQL untuk ID tertentu
        String sql = "SELECT nama_makanan, gambar, rating FROM makanan WHERE id_makanan = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, 1); // Set ID makanan
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            // Ambil nama makanan dan gambar
            String nama = rs.getString("nama_makanan");
            byte[] gambarBytes = rs.getBytes("gambar");
            String rating = rs.getString("rating");

            sby.txtJudul7.setText(nama); // Set judul untuk Panel 1
            sby.rating1.setText("Rating " + rating + "/5");
            if (gambarBytes != null) {
                // Convert byte array ke ImageIcon untuk JLabel
                ImageIcon imageIcon = new ImageIcon(gambarBytes);
                sby.gambar7.setIcon(imageIcon);
            }else {
                sby.gambar7.setText("Gambar tidak tersedia.");
            }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        int id = login.Session.getUserId();
try {
    String sql = "SELECT nama_makanan, gambar FROM user_makanan WHERE id_user = ? AND id_makanan BETWEEN 1 AND 5";
    PreparedStatement ps = conn.prepareStatement(sql);
    ps.setInt(1, id);
    ResultSet rs = ps.executeQuery();
    
    
    if (id == 0) {
        JOptionPane.showMessageDialog(this, "ID User Tidak Boleh Kosong!!", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        // Daftar panel dan label yang akan diperiksa
        JLabel[] gambarLabels = {sby.gambar13, sby.gambar14, sby.gambar15, sby.gambar16, sby.gambar17};
        JLabel[] textFields = {sby.txtJudul13, sby.txtJudul14, sby.txtJudul15, sby.txtJudul16, sby.txtJudul17};
        
        int i = 0; // Index untuk melacak panel kosong

        while (rs.next() && i < gambarLabels.length) {
            String nama = rs.getString("nama_makanan");
            byte[] gambarBytes = rs.getBytes("gambar");

            // Hanya tambahkan ke panel kosong
            if (textFields[i].getText().isEmpty() && gambarLabels[i].getIcon() == null) {
                textFields[i].setText(nama); // Set nama makanan ke text field
                if (gambarBytes != null) {
                    // Konversi byte array ke ImageIcon
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    gambarLabels[i].setIcon(imageIcon);
                } else {
                    gambarLabels[i].setText("Gambar tidak tersedia.");
                }
                i++; // Lanjut ke panel berikutnya
            }
        }
    }
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}

        
        sby.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_makananActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         surabaya sby = new surabaya();
        try {
    // ID makanan untuk masing-masing panel (statis)
    int[] ids = {6,7,8,9,10,11};

    // Ambil data untuk setiap ID
    for (int i = 0; i < ids.length; i++) {
        int id = ids[i];

        // Query SQL untuk ID tertentu
        String sql = "SELECT nama_makanan, gambar FROM makanan WHERE id_makanan = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, id); // Set ID makanan
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            // Ambil nama makanan dan gambar
            String nama = rs.getString("nama_makanan");
            byte[] gambarBytes = rs.getBytes("gambar");

            // Masukkan ke panel sesuai indeks
            switch (i) {
                case 0:
                    sby.txtJudul1.setText(nama); // Set judul untuk Panel 1
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar1.setIcon(imageIcon);
                    }else {
                        sby.gambar1.setText("Gambar tidak tersedia.");
                    }
                    break;

                case 1:
                    sby.txtJudul2.setText(nama); // Set judul untuk Panel 2
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar2.setIcon(imageIcon);
                    }else {
                        sby.gambar2.setText("Gambar tidak tersedia.");
                    }
                    break;

                case 2:
                    sby.txtJudul3.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar3.setIcon(imageIcon);
                    }else {
                        sby.gambar3.setText("Gambar tidak tersedia.");
                    }
                    break;
                    
                case 3:
                    sby.txtJudul4.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar4.setIcon(imageIcon);
                    }else {
                        sby.gambar4.setText("Gambar tidak tersedia.");
                    }
                    break;
                    
                case 4:
                    sby.txtJudul5.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar5.setIcon(imageIcon);
                    }else {
                        sby.gambar5.setText("Gambar tidak tersedia.");
                    }
                    break;
                case 5:
                    sby.txtJudul6.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar6.setIcon(imageIcon);
                    }else {
                        sby.gambar6.setText("Gambar tidak tersedia.");
                    }
                    break;

                default:
                    break;
            }
        } else {
            // Jika data tidak ditemukan, tambahkan pesan error ke panel
            switch (i) {
                case 0:
                    sby.txtJudul1.setText("Data tidak ditemukan.");
                    sby.gambar1.setText("Tidak ada gambar.");
                    sby.gambar1.setIcon(null);
                    break;
                case 1:
                    sby.txtJudul2.setText("Data tidak ditemukan.");
                    sby.gambar2.setText("Tidak ada gambar.");
                    sby.gambar2.setIcon(null);
                    break;
                case 2:
                    sby.txtJudul3.setText("Data tidak ditemukan.");
                    sby.gambar3.setText("Tidak ada gambar.");
                    sby.gambar3.setIcon(null);
                case 3:
                    sby.txtJudul4.setText("Data tidak ditemukan.");
                    sby.gambar4.setText("Tidak ada gambar.");
                    sby.gambar4.setIcon(null);
                case 4:
                    sby.txtJudul5.setText("Data tidak ditemukan.");
                    sby.gambar5.setText("Tidak ada gambar.");
                    sby.gambar5.setIcon(null);
                    break;
                case 5:
                    sby.txtJudul6.setText("Data tidak ditemukan.");
                    sby.gambar6.setText("Tidak ada gambar.");
                    sby.gambar6.setIcon(null);
                    break;
                default:
                    break;
            }
        }

        rs.close();
        ps.close();
    }

    
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
        
        try{
             // Query SQL untuk ID tertentu
        String sql = "SELECT nama_makanan, gambar, rating FROM makanan WHERE id_makanan = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, 1); // Set ID makanan
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            // Ambil nama makanan dan gambar
            String nama = rs.getString("nama_makanan");
            byte[] gambarBytes = rs.getBytes("gambar");
            String rating = rs.getString("rating");

            sby.txtJudul7.setText(nama); // Set judul untuk Panel 1
            sby.rating1.setText("Rating " + rating + "/5");
            if (gambarBytes != null) {
                // Convert byte array ke ImageIcon untuk JLabel
                ImageIcon imageIcon = new ImageIcon(gambarBytes);
                sby.gambar7.setIcon(imageIcon);
            }else {
                sby.gambar7.setText("Gambar tidak tersedia.");
            }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        int id = Session.getUserId();
        try {
            String sql = "SELECT nama_makanan, gambar FROM user_makanan WHERE id_user = ? AND id_makanan BETWEEN 6 AND 11";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, id);
            ResultSet rs = ps.executeQuery();


            if (id == 0) {
                JOptionPane.showMessageDialog(this, "ID User Tidak Boleh Kosong!!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                // Daftar panel dan label yang akan diperiksa
                JLabel[] gambarLabels = {sby.gambar13, sby.gambar14, sby.gambar15, sby.gambar16, sby.gambar17};
                JLabel[] textFields = {sby.txtJudul13, sby.txtJudul14, sby.txtJudul15, sby.txtJudul16, sby.txtJudul17};

                int i = 0; // Index untuk melacak panel kosong

                while (rs.next() && i < gambarLabels.length) {
                    String nama = rs.getString("nama_makanan");
                    byte[] gambarBytes = rs.getBytes("gambar");

                    // Hanya tambahkan ke panel kosong
                    if (textFields[i].getText().isEmpty() && gambarLabels[i].getIcon() == null) {
                        textFields[i].setText(nama); // Set nama makanan ke text field
                        if (gambarBytes != null) {
                            // Konversi byte array ke ImageIcon
                            ImageIcon imageIcon = new ImageIcon(gambarBytes);
                            gambarLabels[i].setIcon(imageIcon);
                        } else {
                            gambarLabels[i].setText("Gambar tidak tersedia.");
                        }
                        i++; // Lanjut ke panel berikutnya
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        sby.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        surabaya sby = new surabaya();
        try {
    // ID makanan untuk masing-masing panel (statis)
    int[] ids = {12,13,14,15,16};

    // Ambil data untuk setiap ID
    for (int i = 0; i < ids.length; i++) {
        int id = ids[i];

        // Query SQL untuk ID tertentu
        String sql = "SELECT nama_makanan, gambar FROM makanan WHERE id_makanan = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, id); // Set ID makanan
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            // Ambil nama makanan dan gambar
            String nama = rs.getString("nama_makanan");
            byte[] gambarBytes = rs.getBytes("gambar");

            // Masukkan ke panel sesuai indeks
            switch (i) {
                case 0:
                    sby.txtJudul1.setText(nama); // Set judul untuk Panel 1
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar1.setIcon(imageIcon);
                    }else {
                        sby.gambar1.setText("Gambar tidak tersedia.");
                    }
                    break;

                case 1:
                    sby.txtJudul2.setText(nama); // Set judul untuk Panel 2
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar2.setIcon(imageIcon);
                    }else {
                        sby.gambar2.setText("Gambar tidak tersedia.");
                    }
                    break;

                case 2:
                    sby.txtJudul3.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar3.setIcon(imageIcon);
                    }else {
                        sby.gambar3.setText("Gambar tidak tersedia.");
                    }
                    break;
                    
                case 3:
                    sby.txtJudul4.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar4.setIcon(imageIcon);
                    }else {
                        sby.gambar4.setText("Gambar tidak tersedia.");
                    }
                    break;
                    
                case 4:
                    sby.txtJudul5.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar5.setIcon(imageIcon);
                    }else {
                        sby.gambar5.setText("Gambar tidak tersedia.");
                    }
                    break;

                default:
                    break;
            }
        } else {
            // Jika data tidak ditemukan, tambahkan pesan error ke panel
            switch (i) {
                case 0:
                    sby.txtJudul1.setText("Data tidak ditemukan.");
                    sby.gambar1.setText("Tidak ada gambar.");
                    sby.gambar1.setIcon(null);
                    break;
                case 1:
                    sby.txtJudul2.setText("Data tidak ditemukan.");
                    sby.gambar2.setText("Tidak ada gambar.");
                    sby.gambar2.setIcon(null);
                    break;
                case 2:
                    sby.txtJudul3.setText("Data tidak ditemukan.");
                    sby.gambar3.setText("Tidak ada gambar.");
                    sby.gambar3.setIcon(null);
                case 3:
                    sby.txtJudul4.setText("Data tidak ditemukan.");
                    sby.gambar4.setText("Tidak ada gambar.");
                    sby.gambar4.setIcon(null);
                case 4:
                    sby.txtJudul5.setText("Data tidak ditemukan.");
                    sby.gambar5.setText("Tidak ada gambar.");
                    sby.gambar5.setIcon(null);
                    break;
                default:
                    break;
            }
        }

        rs.close();
        ps.close();
    }

    
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
        
        try{
             // Query SQL untuk ID tertentu
        String sql = "SELECT nama_makanan, gambar, rating FROM makanan WHERE id_makanan = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, 1); // Set ID makanan
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            // Ambil nama makanan dan gambar
            String nama = rs.getString("nama_makanan");
            byte[] gambarBytes = rs.getBytes("gambar");
            String rating = rs.getString("rating");

            sby.txtJudul7.setText(nama); // Set judul untuk Panel 1
            sby.rating1.setText("Rating " + rating + "/5");
            if (gambarBytes != null) {
                // Convert byte array ke ImageIcon untuk JLabel
                ImageIcon imageIcon = new ImageIcon(gambarBytes);
                sby.gambar7.setIcon(imageIcon);
            }else {
                sby.gambar7.setText("Gambar tidak tersedia.");
            }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        int id = Session.getUserId();
        try {
            String sql = "SELECT nama_makanan, gambar FROM user_makanan WHERE id_user = ? AND id_makanan BETWEEN 12 AND 16";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, id);
            ResultSet rs = ps.executeQuery();


            if (id == 0) {
                JOptionPane.showMessageDialog(this, "ID User Tidak Boleh Kosong!!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                // Daftar panel dan label yang akan diperiksa
                JLabel[] gambarLabels = {sby.gambar13, sby.gambar14, sby.gambar15, sby.gambar16, sby.gambar17};
                JLabel[] textFields = {sby.txtJudul13, sby.txtJudul14, sby.txtJudul15, sby.txtJudul16, sby.txtJudul17};

                int i = 0; // Index untuk melacak panel kosong

                while (rs.next() && i < gambarLabels.length) {
                    String nama = rs.getString("nama_makanan");
                    byte[] gambarBytes = rs.getBytes("gambar");

                    // Hanya tambahkan ke panel kosong
                    if (textFields[i].getText().isEmpty() && gambarLabels[i].getIcon() == null) {
                        textFields[i].setText(nama); // Set nama makanan ke text field
                        if (gambarBytes != null) {
                            // Konversi byte array ke ImageIcon
                            ImageIcon imageIcon = new ImageIcon(gambarBytes);
                            gambarLabels[i].setIcon(imageIcon);
                        } else {
                            gambarLabels[i].setText("Gambar tidak tersedia.");
                        }
                        i++; // Lanjut ke panel berikutnya
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        sby.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        surabaya sby = new surabaya();
        try {
    // ID makanan untuk masing-masing panel (statis)
    int[] ids = {17,18,19,20,21};

    // Ambil data untuk setiap ID
    for (int i = 0; i < ids.length; i++) {
        int id = ids[i];

        // Query SQL untuk ID tertentu
        String sql = "SELECT nama_makanan, gambar FROM makanan WHERE id_makanan = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, id); // Set ID makanan
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            // Ambil nama makanan dan gambar
            String nama = rs.getString("nama_makanan");
            byte[] gambarBytes = rs.getBytes("gambar");

            // Masukkan ke panel sesuai indeks
            switch (i) {
                case 0:
                    sby.txtJudul1.setText(nama); // Set judul untuk Panel 1
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar1.setIcon(imageIcon);
                    }else {
                        sby.gambar1.setText("Gambar tidak tersedia.");
                    }
                    break;

                case 1:
                    sby.txtJudul2.setText(nama); // Set judul untuk Panel 2
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar2.setIcon(imageIcon);
                    }else {
                        sby.gambar2.setText("Gambar tidak tersedia.");
                    }
                    break;

                case 2:
                    sby.txtJudul3.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar3.setIcon(imageIcon);
                    }else {
                        sby.gambar3.setText("Gambar tidak tersedia.");
                    }
                    break;
                    
                case 3:
                    sby.txtJudul4.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar4.setIcon(imageIcon);
                    }else {
                        sby.gambar4.setText("Gambar tidak tersedia.");
                    }
                    break;
                    
                case 4:
                    sby.txtJudul5.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar5.setIcon(imageIcon);
                    }else {
                        sby.gambar5.setText("Gambar tidak tersedia.");
                    }
                    break;

                default:
                    break;
            }
        } else {
            // Jika data tidak ditemukan, tambahkan pesan error ke panel
            switch (i) {
                case 0:
                    sby.txtJudul1.setText("Data tidak ditemukan.");
                    sby.gambar1.setText("Tidak ada gambar.");
                    sby.gambar1.setIcon(null);
                    break;
                case 1:
                    sby.txtJudul2.setText("Data tidak ditemukan.");
                    sby.gambar2.setText("Tidak ada gambar.");
                    sby.gambar2.setIcon(null);
                    break;
                case 2:
                    sby.txtJudul3.setText("Data tidak ditemukan.");
                    sby.gambar3.setText("Tidak ada gambar.");
                    sby.gambar3.setIcon(null);
                case 3:
                    sby.txtJudul4.setText("Data tidak ditemukan.");
                    sby.gambar4.setText("Tidak ada gambar.");
                    sby.gambar4.setIcon(null);
                case 4:
                    sby.txtJudul5.setText("Data tidak ditemukan.");
                    sby.gambar5.setText("Tidak ada gambar.");
                    sby.gambar5.setIcon(null);
                    break;
                default:
                    break;
            }
        }

        rs.close();
        ps.close();
    }

    
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
        
        try{
             // Query SQL untuk ID tertentu
        String sql = "SELECT nama_makanan, gambar, rating FROM makanan WHERE id_makanan = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, 1); // Set ID makanan
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            // Ambil nama makanan dan gambar
            String nama = rs.getString("nama_makanan");
            byte[] gambarBytes = rs.getBytes("gambar");
            String rating = rs.getString("rating");

            sby.txtJudul7.setText(nama); // Set judul untuk Panel 1
            sby.rating1.setText("Rating " + rating + "/5");
            if (gambarBytes != null) {
                // Convert byte array ke ImageIcon untuk JLabel
                ImageIcon imageIcon = new ImageIcon(gambarBytes);
                sby.gambar7.setIcon(imageIcon);
            }else {
                sby.gambar7.setText("Gambar tidak tersedia.");
            }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        int id = Session.getUserId();
        try {
            String sql = "SELECT nama_makanan, gambar FROM user_makanan WHERE id_user = ? AND id_makanan BETWEEN 17 AND 21";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, id);
            ResultSet rs = ps.executeQuery();


            if (id == 0) {
                JOptionPane.showMessageDialog(this, "ID User Tidak Boleh Kosong!!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                // Daftar panel dan label yang akan diperiksa
                JLabel[] gambarLabels = {sby.gambar13, sby.gambar14, sby.gambar15, sby.gambar16, sby.gambar17};
                JLabel[] textFields = {sby.txtJudul13, sby.txtJudul14, sby.txtJudul15, sby.txtJudul16, sby.txtJudul17};

                int i = 0; // Index untuk melacak panel kosong

                while (rs.next() && i < gambarLabels.length) {
                    String nama = rs.getString("nama_makanan");
                    byte[] gambarBytes = rs.getBytes("gambar");

                    // Hanya tambahkan ke panel kosong
                    if (textFields[i].getText().isEmpty() && gambarLabels[i].getIcon() == null) {
                        textFields[i].setText(nama); // Set nama makanan ke text field
                        if (gambarBytes != null) {
                            // Konversi byte array ke ImageIcon
                            ImageIcon imageIcon = new ImageIcon(gambarBytes);
                            gambarLabels[i].setIcon(imageIcon);
                        } else {
                            gambarLabels[i].setText("Gambar tidak tersedia.");
                        }
                        i++; // Lanjut ke panel berikutnya
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        sby.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        surabaya sby = new surabaya();
        try {
    // ID makanan untuk masing-masing panel (statis)
    int[] ids = {22,23,24,25,26};

    // Ambil data untuk setiap ID
    for (int i = 0; i < ids.length; i++) {
        int id = ids[i];

        // Query SQL untuk ID tertentu
        String sql = "SELECT nama_makanan, gambar FROM makanan WHERE id_makanan = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, id); // Set ID makanan
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            // Ambil nama makanan dan gambar
            String nama = rs.getString("nama_makanan");
            byte[] gambarBytes = rs.getBytes("gambar");

            // Masukkan ke panel sesuai indeks
            switch (i) {
                case 0:
                    sby.txtJudul1.setText(nama); // Set judul untuk Panel 1
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar1.setIcon(imageIcon);
                    }else {
                        sby.gambar1.setText("Gambar tidak tersedia.");
                    }
                    break;

                case 1:
                    sby.txtJudul2.setText(nama); // Set judul untuk Panel 2
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar2.setIcon(imageIcon);
                    }else {
                        sby.gambar2.setText("Gambar tidak tersedia.");
                    }
                    break;

                case 2:
                    sby.txtJudul3.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar3.setIcon(imageIcon);
                    }else {
                        sby.gambar3.setText("Gambar tidak tersedia.");
                    }
                    break;
                    
                case 3:
                    sby.txtJudul4.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar4.setIcon(imageIcon);
                    }else {
                        sby.gambar4.setText("Gambar tidak tersedia.");
                    }
                    break;
                    
                case 4:
                    sby.txtJudul5.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar5.setIcon(imageIcon);
                    }else {
                        sby.gambar5.setText("Gambar tidak tersedia.");
                    }
                    break;

                default:
                    break;
            }
        } else {
            // Jika data tidak ditemukan, tambahkan pesan error ke panel
            switch (i) {
                case 0:
                    sby.txtJudul1.setText("Data tidak ditemukan.");
                    sby.gambar1.setText("Tidak ada gambar.");
                    sby.gambar1.setIcon(null);
                    break;
                case 1:
                    sby.txtJudul2.setText("Data tidak ditemukan.");
                    sby.gambar2.setText("Tidak ada gambar.");
                    sby.gambar2.setIcon(null);
                    break;
                case 2:
                    sby.txtJudul3.setText("Data tidak ditemukan.");
                    sby.gambar3.setText("Tidak ada gambar.");
                    sby.gambar3.setIcon(null);
                case 3:
                    sby.txtJudul4.setText("Data tidak ditemukan.");
                    sby.gambar4.setText("Tidak ada gambar.");
                    sby.gambar4.setIcon(null);
                case 4:
                    sby.txtJudul5.setText("Data tidak ditemukan.");
                    sby.gambar5.setText("Tidak ada gambar.");
                    sby.gambar5.setIcon(null);
                    break;
                default:
                    break;
            }
        }

        rs.close();
        ps.close();
    }

    
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
        
        try{
             // Query SQL untuk ID tertentu
        String sql = "SELECT nama_makanan, gambar, rating FROM makanan WHERE id_makanan = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, 1); // Set ID makanan
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            // Ambil nama makanan dan gambar
            String nama = rs.getString("nama_makanan");
            byte[] gambarBytes = rs.getBytes("gambar");
            String rating = rs.getString("rating");

            sby.txtJudul7.setText(nama); // Set judul untuk Panel 1
            sby.rating1.setText("Rating " + rating + "/5");
            if (gambarBytes != null) {
                // Convert byte array ke ImageIcon untuk JLabel
                ImageIcon imageIcon = new ImageIcon(gambarBytes);
                sby.gambar7.setIcon(imageIcon);
            }else {
                sby.gambar7.setText("Gambar tidak tersedia.");
            }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        int id = Session.getUserId();
        try {
            String sql = "SELECT nama_makanan, gambar FROM user_makanan WHERE id_user = ? AND id_makanan BETWEEN 22 AND 26";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, id);
            ResultSet rs = ps.executeQuery();


            if (id == 0) {
                JOptionPane.showMessageDialog(this, "ID User Tidak Boleh Kosong!!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                // Daftar panel dan label yang akan diperiksa
                JLabel[] gambarLabels = {sby.gambar13, sby.gambar14, sby.gambar15, sby.gambar16, sby.gambar17};
                JLabel[] textFields = {sby.txtJudul13, sby.txtJudul14, sby.txtJudul15, sby.txtJudul16, sby.txtJudul17};

                int i = 0; // Index untuk melacak panel kosong

                while (rs.next() && i < gambarLabels.length) {
                    String nama = rs.getString("nama_makanan");
                    byte[] gambarBytes = rs.getBytes("gambar");

                    // Hanya tambahkan ke panel kosong
                    if (textFields[i].getText().isEmpty() && gambarLabels[i].getIcon() == null) {
                        textFields[i].setText(nama); // Set nama makanan ke text field
                        if (gambarBytes != null) {
                            // Konversi byte array ke ImageIcon
                            ImageIcon imageIcon = new ImageIcon(gambarBytes);
                            gambarLabels[i].setIcon(imageIcon);
                        } else {
                            gambarLabels[i].setText("Gambar tidak tersedia.");
                        }
                        i++; // Lanjut ke panel berikutnya
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        sby.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        surabaya sby = new surabaya();
        try {
    // ID makanan untuk masing-masing panel (statis)
    int[] ids = {27,28,29,30,31,32};

    // Ambil data untuk setiap ID
    for (int i = 0; i < ids.length; i++) {
        int id = ids[i];

        // Query SQL untuk ID tertentu
        String sql = "SELECT nama_makanan, gambar FROM makanan WHERE id_makanan = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, id); // Set ID makanan
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            // Ambil nama makanan dan gambar
            String nama = rs.getString("nama_makanan");
            byte[] gambarBytes = rs.getBytes("gambar");

            // Masukkan ke panel sesuai indeks
            switch (i) {
                case 0:
                    sby.txtJudul1.setText(nama); // Set judul untuk Panel 1
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar1.setIcon(imageIcon);
                    }else {
                        sby.gambar1.setText("Gambar tidak tersedia.");
                    }
                    break;

                case 1:
                    sby.txtJudul2.setText(nama); // Set judul untuk Panel 2
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar2.setIcon(imageIcon);
                    }else {
                        sby.gambar2.setText("Gambar tidak tersedia.");
                    }
                    break;

                case 2:
                    sby.txtJudul3.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar3.setIcon(imageIcon);
                    }else {
                        sby.gambar3.setText("Gambar tidak tersedia.");
                    }
                    break;
                    
                case 3:
                    sby.txtJudul4.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar4.setIcon(imageIcon);
                    }else {
                        sby.gambar4.setText("Gambar tidak tersedia.");
                    }
                    break;
                    
                case 4:
                    sby.txtJudul5.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar5.setIcon(imageIcon);
                    }else {
                        sby.gambar5.setText("Gambar tidak tersedia.");
                    }
                    break;
                case 5:
                    sby.txtJudul6.setText(nama); // Set judul untuk Panel 3
                    if (gambarBytes != null) {
                    // Convert byte array ke ImageIcon untuk JLabel
                    ImageIcon imageIcon = new ImageIcon(gambarBytes);
                    sby.gambar6.setIcon(imageIcon);
                    }else {
                        sby.gambar6.setText("Gambar tidak tersedia.");
                    }
                    break;

                default:
                    break;
            }
        } else {
            // Jika data tidak ditemukan, tambahkan pesan error ke panel
            switch (i) {
                case 0:
                    sby.txtJudul1.setText("Data tidak ditemukan.");
                    sby.gambar1.setText("Tidak ada gambar.");
                    sby.gambar1.setIcon(null);
                    break;
                case 1:
                    sby.txtJudul2.setText("Data tidak ditemukan.");
                    sby.gambar2.setText("Tidak ada gambar.");
                    sby.gambar2.setIcon(null);
                    break;
                case 2:
                    sby.txtJudul3.setText("Data tidak ditemukan.");
                    sby.gambar3.setText("Tidak ada gambar.");
                    sby.gambar3.setIcon(null);
                case 3:
                    sby.txtJudul4.setText("Data tidak ditemukan.");
                    sby.gambar4.setText("Tidak ada gambar.");
                    sby.gambar4.setIcon(null);
                case 4:
                    sby.txtJudul5.setText("Data tidak ditemukan.");
                    sby.gambar5.setText("Tidak ada gambar.");
                    sby.gambar5.setIcon(null);
                    break;
                case 5:
                    sby.txtJudul6.setText("Data tidak ditemukan.");
                    sby.gambar6.setText("Tidak ada gambar.");
                    sby.gambar6.setIcon(null);
                    break;
                default:
                    break;
            }
        }

        rs.close();
        ps.close();
    }

    
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
        
        try{
             // Query SQL untuk ID tertentu
        String sql = "SELECT nama_makanan, gambar, rating FROM makanan WHERE id_makanan = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setInt(1, 1); // Set ID makanan
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            // Ambil nama makanan dan gambar
            String nama = rs.getString("nama_makanan");
            byte[] gambarBytes = rs.getBytes("gambar");
            String rating = rs.getString("rating");

            sby.txtJudul7.setText(nama); // Set judul untuk Panel 1
            sby.rating1.setText("Rating " + rating + "/5");
            if (gambarBytes != null) {
                // Convert byte array ke ImageIcon untuk JLabel
                ImageIcon imageIcon = new ImageIcon(gambarBytes);
                sby.gambar7.setIcon(imageIcon);
            }else {
                sby.gambar7.setText("Gambar tidak tersedia.");
            }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        int id = Session.getUserId();
        try {
            String sql = "SELECT nama_makanan, gambar FROM user_makanan WHERE id_user = ? AND id_makanan BETWEEN 27 AND 32";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, id);
            ResultSet rs = ps.executeQuery();


            if (id == 0) {
                JOptionPane.showMessageDialog(this, "ID User Tidak Boleh Kosong!!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                // Daftar panel dan label yang akan diperiksa
                JLabel[] gambarLabels = {sby.gambar13, sby.gambar14, sby.gambar15, sby.gambar16, sby.gambar17};
                JLabel[] textFields = {sby.txtJudul13, sby.txtJudul14, sby.txtJudul15, sby.txtJudul16, sby.txtJudul17};

                int i = 0; // Index untuk melacak panel kosong

                while (rs.next() && i < gambarLabels.length) {
                    String nama = rs.getString("nama_makanan");
                    byte[] gambarBytes = rs.getBytes("gambar");

                    // Hanya tambahkan ke panel kosong
                    if (textFields[i].getText().isEmpty() && gambarLabels[i].getIcon() == null) {
                        textFields[i].setText(nama); // Set nama makanan ke text field
                        if (gambarBytes != null) {
                            // Konversi byte array ke ImageIcon
                            ImageIcon imageIcon = new ImageIcon(gambarBytes);
                            gambarLabels[i].setIcon(imageIcon);
                        } else {
                            gambarLabels[i].setText("Gambar tidak tersedia.");
                        }
                        i++; // Lanjut ke panel berikutnya
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error memuat data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        sby.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(kotaa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(kotaa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(kotaa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(kotaa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new kotaa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    public javax.swing.JButton makanan;
    private costume.RoundedPanel roundedPanel1;
    private costume.RoundedPanel roundedPanel2;
    // End of variables declaration//GEN-END:variables
}
